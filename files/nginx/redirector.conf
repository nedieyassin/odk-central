# In files/nginx/redirector.conf (will be copied as redirector.conf.template)

server {
    listen 80; # Listen on internal port 80 for traffic forwarded by Traefik
    listen [::]:80;
    server_name https://$DOMAIN; # This must match the Host header forwarded by Traefik

    # No ACME challenge location needed here if Traefik handles it

    # No HTTP-to-HTTPS redirect needed here if Traefik handles it


    location /v1/ {
         proxy_pass http://service:8383;
        include /etc/nginx/conf.d/common-headers.conf;
    }


    # Proxy requests to your backend services (service and enketo)
    # You'll need location blocks here similar to what was likely in your original Nginx config
    # that setup-odk.sh applied. Example (you need the full config):
    # location / {
    #    proxy_pass http://service:8080; # Example, replace with actual service port
    #    include /etc/nginx/conf.d/common-headers.conf; # Include common headers
    # }
    # location /enketo {
    #    proxy_pass http://enketo:8005; # Example, replace with actual service port
    #    include /etc/nginx/conf.d/common-headers.conf;
    # }

    # Keep a default server maybe, but ensure the main domain is matched
    # default_server on port 80 should ideally not be hit if Traefik forwards correctly
}

# Remove or simplify the second server block returning 421 if the primary
# server block correctly matches the domain forwarded by Traefik.
# Keeping a default server returning 421 is a safe fallback, but ensure the
# intended domain hits the first block.
# server {
#     listen 80 default_server;
#     listen [::]:80 default_server;
#     return 421; # Keep as fallback if necessary
# }